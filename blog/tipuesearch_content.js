var tipuesearch = {"pages":[{"title":"About","text":"2017Fall 機械設計工程系 CADP & CP 課程倉儲: https://mde1a1.kmol.info/2017fall 課程投影片: https://mde1a1.kmol.info/2017fall/doc/trunk/index.html 課程網誌: https://mde1a1.kmol.info/2017fall/doc/trunk/blog/","tags":"misc","url":"./pages/about/"},{"title":"2017 Fall CP 第九週","text":"midterm exam 期中心得. from 林俊鎧 on Vimeo .","tags":"Course","url":"./40623244-2017-fall-cp-w9.html"},{"title":"2017 Fall CP 第八週","text":"Python物件導向用語及用法,for 迴圈的運用,使用eric6 建立計算機對話表單 Python 物件導向用語及用法 : class 名稱 : (class definition) def __init__ (self,名稱) : (constructor(建構) function) def __del__ (self) : (destructor(解構) function) (class內的函式為attrbutes(屬性) and method(方法) definition,此類別為object definition(物件導向)) class definition and object instantiation: class definition syntax(語法): class subclass[(superclass)]: [attributes and methods] object instantiation(案例) syntax: object=class() attributes and methods invoke: object.attribute object.method() 補充: 當函式被丟入class作為方法時,變數值接用self填入,以串起整個程式碼 for 迴圈的運用 : 操作影片 : for 迴圈的運用. from 林俊鎧 on Vimeo . 補充: range() : 重複數列 (for 迴圈在運用時,必定要縮排) range(首數,數量,增量) : 舉例:range(1,10,2),此數列從1開始每增加2,排列到小於10的數 def : 定義函式 diamond() : 函式名稱 建立計算機對話表單 : 操作影片 : eric6建立表單方法. from 林俊鎧 on Vimeo .","tags":"Course","url":"./40623244-w8.html"},{"title":"計算機程式第七週學習心得","text":"W7-Exam 操作影片: cpb 40623244 W7 考試. from 林俊鎧 on Vimeo . 學習心得: 經過多次的摸索,慢慢熟悉這個倉儲系統,雖然在過程中,常常近端出現錯誤,或是推送資料時,漏了某個步驟,造成提交的資料遺失,但是從這些錯誤,修改的反覆過程中,也學習到相當多,問題不可怕,可怕的是自己的心,不去想辦法解決,永遠都做不到自己想要的結果. 自評成績: 每週出席情況 : 100 紙本筆記 : 75 隨身碟內容 : 75 個人倉儲內容 : 70 各週上課摘要 : 70 自評分數 : 70","tags":"Course","url":"./40623244-w7-exam.html"},{"title":"2017 Fall CP 第六週","text":"如何 git clone Github 上的倉儲,使用eric6開始開發PyQt5的程式 clone Github倉儲步驟: H:\\tmp>mkdir github H:\\tmp>cd github H:\\tmp\\github>git clone https://github.com/kmolab/rpcalc.git 用eric6建立新PyQt5程式步驟: 建立新專案: project new (project name : calculator ; prject language : python3 ; project Directory : H:\\tmp\\cal) 轉換圖形化介面: 切換到Form 滑鼠右鍵 New Form(Dialog) 存檔.ui(dialog.ui) 就會開啟Qt Designer 轉換python3程式碼: 回到eric6 右鍵點選剛建立的.ui compile form(自動轉成.py)","tags":"Course","url":"./40623244-w6.html"},{"title":"2017 Fall CP 第四週","text":"利用Leo Editor 維護網誌(進階討論.gitignore) Fossil 指令: fossil status : 狀態 fossil delete : 刪除 Leo Editor 介面解釋: @ : 代表一個節點 @ language python : 內文指令 import os : 執行 os ( os . system ( \"pelican content -o blog -s local_publishconf.py\" ) g . es ( \"admin pelican 近端執行完畢\" )) @button https server : 近端模擬遠端 補充: 當在進行遠端網路模擬時,需停留在對應位置上(https-server),才會進行模擬. 網誌內的數字不要使用全形文字. 想要遠端有討論版,需先執行遠端鈕(github-blog),轉成遠端格式後,再將資料推送上去. 改author名稱步驟: 1.在Leo Editor/@path content,點開下面子節點,修改author的名稱 2.到隨身系統介面: H:\\tmp\\fossil\\wd\\40623244>fossil status(檢查資料狀態) (因為author從yen換成40623244,所以有MISSING出現,要刪除它) H:\\tmp\\fossil\\wd\\40623244>fossil delete 要刪除的檔案路徑 H:\\tmp\\fossil\\wd\\40623244>fossil commit -m \" change author to 4062324 \" 進階討論 .gitignore內容: * /git/ * , * /__pycache__/ * , * / *.pyc 這些是我們不推送上去的檔案資料 不推送步驟: H:\\tmp\\fossil\\wd\\40623244>fossil delete __pycache__/*(以操作系統角度來說,這些檔案未被刪除) H:\\tmp\\fossil\\wd\\40623244>fossil add . H:\\tmp\\fossil\\wd\\40623244>fossil commit -m \"delete all .pyc files\"","tags":"Course","url":"./40623244-w4.html"},{"title":"2017 Fall CP 第三週","text":"學習啟動隨身系統,如何建立倉儲,如何改版,以及如何同步遠近端倉儲資料(補充:修改倉儲密碼) 內容: 1.先啟動隨身系統 2.再批次檔裡輸入下列指令 Y:\\>隨身碟槽區(H:) H:\\>mkdir tmp H:\\>cd tmp H:\\tmp>mkdir fossil H:\\tmp>cd fossil H:\\tmp\\fossil>fossil clone https://cadpb.kmol.info/4052 4052.fossil H:\\tmp\\fossil>mkdir wd H:\\tmp\\fossil>cd wd H:\\tmp\\fossil\\wd>mkdir 4052 H:\\tmp\\fossil\\wd>cd 4052 H:\\tmp\\fossil\\wd\\4052>fossil open ./../../4052.fossil H:\\tmp\\fossil\\wd\\4052>cd ../.. H:\\tmp\\fossil>fossil clone https://40623244@cpb.kmol.info/40623244 40623244.fossil H:\\tmp\\fossil\\wd>mkdir 40623244 H:\\tmp\\fossil\\wd>cd 40623244 H:\\tmp\\fossil\\wd\\40623244>fossil open ./../../40623244.fossil 3.把4052資料夾內的資料複製貼上到40623244資料夾內(__pycache__和__FOSSIL__不用複製) 4.將所有40623244內的資料推上遠端: H:\\tmp\\fossil\\wd\\40623244>fossil add . H:\\tmp\\fossil\\wd\\40623244>fossil commit -m \"initial add\" 補充: 1.相關指令意義: mkdir : 建立資料夾 cd : 進入指定資料夾 \".\" : 當前資料夾 \"..\" : 前一個資料夾 2.Fossil SCM 指令: fossil clone : 克隆 fossil open : 開啟 fossil add : 加入 fossil commit -m \"訊息\" : 提交 3.修改密碼: H:\\tmp\\fossil>fossil sql -R 40623244.fossil sqlite>. schema user (看密碼)sqlite>select login , pw from user ; (改密碼)sqlite>update user set pw = '密碼' where login = 'user'; 網頁版次: [/doc/trunk/index.html | 投影片] [/doc/trunk/blog/index.html | 網誌] (trunk 為最新版)","tags":"Course","url":"./40623244-w3.html"},{"title":"2017 Fall CADP 第二週","text":"本學期起各班透過一台 Ubuntu 16.04 主機, 建立 Fossil SCM 伺服器, 且每一學員發放一個 Fossil SCM 倉儲, 其中各學員可以利用 Wiki 與 Technote 紀錄學習資料外, 還可以將靜態網誌與簡報檔案放入 Files 資料區. 二乙上課內容 希望為每位學員建立倉儲的設想流程如下: 各學員可以獨立維護倉儲內容, 也可以在總管理員的權限下, 為分組學員建立帳號, 逐步導入協同設計 各學員的倉儲以修課班級命名伺服器, 以學號命名倉儲, 方便依照此一規律擷取各學員的倉儲頁面. 各學員能以電子郵件收到與新建倉儲相關的連結, 以及帳號密碼. 必須擴增 Ubuntu ulimits -n 同時開檔的設限範圍 (內定只允許同時開啟 1024 個檔案) 解決方案: 主機名稱可以透過 domain dns 中的 CNAME 別名方式處理, 因為目前所能提供出來的 IPv4/IPv6 雙支援主機, 之前已經都設定了符號名稱. fossil init 雖然提供指定管理者的 -A 選項功能, 但是無法直接指定管理者對應密碼, 因此必須建立倉儲之後, 再利用 fossil user 修改密碼, 之後再利用 Gmail 寄出通知信, 其中提供倉儲連結, 登入帳號與密碼等資訊. 建立各學員倉儲檔案的程式如下, 如前所述, 主要透過兩個 Fossil SCM 指令完成, 在 Windows 採用 Fossil SCM 2.3 版建立所有 .fossil 倉儲時, 將同時以 email 通知各學員. 各學員的 .fossil 檔案再以 sftp 送到伺服主機對應帳號所屬的目錄下. 必須要特別注意的是, 採用 Fossil SCM 2.3 版所建立的 .fossil 倉儲檔案, 在 Ubuntu 操作系統上也必須採用相同版本的 fossil, 否則舊版 fossil 可能無法開啟新版 fossil 程式所建立的倉儲檔. import os import string import random # 使用 Gmail 寄信必須導入下列模組 import smtplib import re from email.mime.text import MIMEText from email.header import Header # 用來以亂數建立密碼的韓式 def id_generator(size=6, chars=string.ascii_uppercase + string.digits): ''' source: https://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python ''' return ''.join(random.choice(chars) for _ in range(size)) # 讀取學員名單, 逐一取得學員學號, 學員名單, 檢查點 1/7 student_data = open(\"2017fall_list/1b.txt\").read() student_list = student_data.splitlines() # 利用 gmail smtp 功能寄信 server = smtplib.SMTP('smtp.gmail.com:587') server.ehlo() server.starttls() # 以下必須準備好對應郵件帳號與密碼的外部檔案, 所提供的寄信帳號, 是否可以寄信, 檢查點 2/7 ''' 寄信之前必須到 https://www.google.com/settings/security/lesssecureapps 修改權限, 改為較低安全權限 否則無法使用程式寄信! ''' # 從外部檔案讀取要用來寄信的 gmail 帳號與密碼 # mail.txt 格式為: 電子郵箱,對應密碼, 以逗點隔開, 檢查點 3/7 email_data = open(\"z:/2017fall/mail.txt\").read() email, email_password= email_data.split(\",\") print(email, email_password) # 是否登入所提供寄信的電子郵箱, 4/7 server.login(email, email_password) # 不同課程名稱, 與對應主機名稱, 必須配合修改 5/7 course_title = \"計算機程式\" fossil_server = \"cpb.kmol.info\" for student_num in student_list: username = student_num repository = username + '.fossil' # 利用所提供的字串, 以亂數組成六個字元的密碼 password = id_generator(6, \"23456789abcdef\") print(student_num, \", \" , password) # 執行 dos command 指令, 建立倉儲 os.system(\"fossil init -A \" +username + \" \" + repository) print(\"已經建立倉儲 \" + repository) # 執行 dos command 指令, 修改使用者密碼 os.system(\"fossil user password \" + username + \" \" + password + \" -R \" + repository) print(\"已經修改密碼\") # 利用 Gmail 寄信, 告知各學員倉儲連結與帳號密碼 # 每一位學員收到的 output 都從這裡 reset output = \"\" # 若學號欄為空, 則不寄信 if student_num != \"\": # output 為寄給每一位學員的資料表格 mail_content = student_num+' 您好: 您在 '+course_title+' 課程中的區域網路倉儲: https://'+fossil_server+'/'+student_num+' ' mail_content += '管理帳號為:'+ student_num + ' 管理密碼為: '+ password+' ' print(student_num) print(mail_content) # 至此 mail_content 已經確定 # 在測試與實際寄送資料, 也必須配合修改, 檢查點 6/7 receiver_email = student_num + \"@gm.nfu.edu.tw\" # 測試用 #receiver_email = student_num+\"@mde.tw\" # 列出收信人 email 位址 #print(receiver_email) #message= MIMEText(mail_content,'plain','UTF-8') # 以 html 格式寄信 message= MIMEText(mail_content,'html','UTF-8') message['Subject'] = Header(course_title+\" Fossil SCM 帳號通知\", 'UTF-8') # 可以先不寄信, 確定格式正確後再開啟, 是否實際寄出信件, 檢查點 7/7 server.sendmail(\"gmail_address\", receiver_email, message.as_string()) server.quit() 各班所完成的主機: 二甲電腦輔助設計實習: https://cadpa.kmol.info 二乙電腦輔助設計實習: https://cadpb.kmol.info 一甲計算機程式: https://cpa.kmol.info 一乙計算機程式: https://cpb.kmol.info","tags":"Course","url":"./40623244-2017-fall-cadp-w2.html"}]};